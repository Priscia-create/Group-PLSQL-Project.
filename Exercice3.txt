Exercice3:

-- Create Students and Grades Tables

CREATE TABLE students (student_id NUMBER PRIMARY KEY, gpa NUMBER);
CREATE TABLE grades (student_id NUMBER, grade CHAR(1));

-- Function to calculate GPA based on letter grades

CREATE OR REPLACE FUNCTION calculate_gpa(stud_id NUMBER) RETURN NUMBER IS
    total_points NUMBER := 0;
    grade_count NUMBER := 0;
    gpa NUMBER := 0;

BEGIN
    FOR grade_rec IN (SELECT grade FROM grades WHERE student_id = stud_id) LOOP
        CASE grade_rec.grade
            WHEN 'A' THEN total_points := total_points + 4;
            WHEN 'B' THEN total_points := total_points + 3;
            WHEN 'C' THEN total_points := total_points + 2;
            WHEN 'D' THEN total_points := total_points + 1;
            WHEN 'F' THEN total_points := total_points + 0;
        END CASE;
        grade_count := grade_count + 1;
    END LOOP;
    
    IF grade_count > 0 THEN
        gpa := total_points / grade_count;
    END IF;

    RETURN gpa;
END;

-- Procedure to add a grade and update GPA

CREATE OR REPLACE PROCEDURE add_student_grade(stud_id NUMBER, grade CHAR) IS
BEGIN
    INSERT INTO grades (student_id, grade) VALUES (stud_id, grade);
    
    -- Update GPA in students table based on the new grade

    UPDATE students
    SET gpa = calculate_gpa(stud_id)
    WHERE student_id = stud_id;
END;
